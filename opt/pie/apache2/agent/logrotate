#!/usr/bin/env perl
use warnings;
use strict;

use CGI;
use IPC::Run qw/run timeout/;
use JSON;
use Try::Tiny;

my $cgi = CGI->new;

my $error_code = '500 Internal Server Error';
my %data = (
  result    => 'unknown',
);
try {
  my ($output, $res);

  if ($ENV{ 'APACHE_LOGGING' } ne 'file') {
      $error_code = '501 Not Implemented';
      die "logrotate is only valid for file logging";
  }

  if ($cgi->request_method eq 'POST') {
    $res = run [qw#sudo pie-trustedproxies.sh#], '>&', \$output, timeout( 60 );
    if ($output) {
      $data{ 'trustedproxies' } = $output;
    } elsif ($res) {
      $data{ 'trustedproxies' } = 'update succeeded';
    } else {
      $data{ 'trustedproxies' } = 'update failed';
    }
  }

  $res = run [qw#sudo pie-entrypoint.sh pie-configtest.sh#], '>&', \$output, timeout( 60 );
  $data{ 'configtest' } = $output;
  die "configtest failed" unless $res;

  if ($cgi->request_method eq 'POST') {
    $res = run [qw#sudo /etc/cron.daily/logrotate#], '>&', \$output, timeout( 120 );
    $data{ 'logrotate' } = $output;
    die "logrotate failed" unless $res;
  }

  $data{ 'result' } = 'success';
} catch {
  $data{ 'result' } = 'error';
  $data{ 'error' } = $_;
};

print $cgi->header(
  -type       => 'application/json',
  -status     => ($data{ 'result' } eq 'success' ? '200 OK' : $error_code),
);
print encode_json( \%data );
